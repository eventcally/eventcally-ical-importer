version: "3.9"
name: "eventcally-ical-importer"

x-web-env:
  &default-web-env
  FLASK_APP: main.py
  DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
  REDIS_URL: redis://default:${REDIS_PASSWORD}@redis
  SECRET_KEY: ${SECRET_KEY}
  PREFERRED_URL_SCHEME: ${PREFERRED_URL_SCHEME:-https}
  SERVER_NAME: ${SERVER_NAME}
  GUNICORN_ACCESS_LOG: "-"
  EVENTCALLY_URL: ${EVENTCALLY_URL:-https://eventcally.com}
  EVENTCALLY_CLIENT_ID: ${EVENTCALLY_CLIENT_ID}
  EVENTCALLY_CLIENT_SECRET: ${EVENTCALLY_CLIENT_SECRET}

x-web:
  &default-web
  image: eventcally/eventcally-ical-importer:${WEB_TAG}
  restart: always
  extra_hosts:
    - "host.docker.internal:host-gateway"
  environment:
    <<: *default-web-env
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  db:
    image: postgis/postgis:12-3.1
    restart: always
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      start_period: "5s"
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data

  db-backup:
    image: prodrigestivill/postgres-backup-local:12
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_EXTRA_OPTS: "-Z6 -c"
      SCHEDULE: "0 0 22 * * *"
    volumes:
      - ${POSTGRES_BACKUP_PATH}:/backups
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: bitnami/redis:6.2
    restart: always
    healthcheck:
      test: "redis-cli -a '${REDIS_PASSWORD}' ping | grep PONG"
      start_period: "5s"
    volumes:
      - ${REDIS_DATA_PATH}:/bitnami/redis/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}

  web:
    <<: *default-web
    healthcheck:
      test: "curl -f ${SERVER_NAME}/up"
      interval: "60s"
      timeout: "5s"
      start_period: "5s"
    ports:
      - "${WEB_PORT:-5000}:5000"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  worker:
    <<: *default-web
    command: celery -A project.celery worker --loglevel=error
    entrypoint: []

  scheduler:
    <<: *default-web
    command: celery -A project.celery beat --loglevel=error
    entrypoint: []

  fluentd:
    image: danielgrams/fluentd
    restart: always
    environment:
      FLUENTD_CONF: fluentd-custom.config
    volumes:
      - ${FLUENTD_LOG_PATH}:/fluentd/log
      - ${FLUENTD_CUSTOM_CONFIG_PATH}/fluentd-custom.config:/fluentd/etc/fluentd-custom.config
      - ${FLUENTD_DOCKER_CONTAINERS_PATH}:/fluentd/containers
